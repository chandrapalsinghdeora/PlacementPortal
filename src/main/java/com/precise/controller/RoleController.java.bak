package com.precise.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.precise.model.CVReleted;
import com.precise.model.Forum;
import com.precise.model.MasterRole;
import com.precise.model.SessionBean;
import com.precise.model.ThreadBlog;
import com.precise.service.RoleService;

@Controller
public class RoleController {
	
	public int userid;
	
	@Autowired
    RoleService roleService;
	
	public RoleController(){
		System.out.println("inside rolecontroller class:");
	}
	
	
	
	/*  **********              for MasterRole jsp pages                **************  */
	@RequestMapping(value = "/getmasterrole", method = RequestMethod.GET)
	public ModelAndView getCreateForumPage(ModelAndView model, HttpServletRequest req) {
		int roleId;
		try
		{
		SessionBean sbean=(SessionBean)req.getSession().getAttribute("sessionBean");
		roleId=sbean.getUserID();
		}catch(Exception e)
		{
			return new ModelAndView("LoginPage");
		}
		//model.setViewName("masterRole");
		List<MasterRole> roledata = roleService.getAllRole();
		return new ModelAndView("Roles", "role", roledata);
	}
	

	
	@RequestMapping(value = "/openForm", method = RequestMethod.POST)
	public ModelAndView openForm(ModelAndView model, HttpServletRequest request) {
     	model.setViewName("masterRole");
		return model;
	}
	
	
	
	@RequestMapping(value = "/saverole", method = RequestMethod.POST)
	public String sendMasterRole(ModelAndView model, HttpServletRequest request,HttpServletResponse response,HttpSession session) throws IOException {

	    MasterRole masterrole = new MasterRole();
	    
	    SessionBean sessionBean = (SessionBean)request.getSession().getAttribute("sessionBean");
	    userid = sessionBean.getUserID();
	    System.out.println("userid is:"+userid);
	    
	    response.setContentType("text/html");  
	    PrintWriter out = response.getWriter();
	    
//	    masterrole.setPkroleid(Integer.parseInt(request.getParameter("pkroleid")));
	    masterrole.setRolename(request.getParameter("rolename"));
	    masterrole.setRoledescription(request.getParameter("roledescription"));
	    masterrole.setModuleid(Integer.parseInt(request.getParameter("moduleid")));
	    masterrole.setCreatedid(sessionBean.getUserID());
	    //System.out.println("user id"+sessionBean.getUserID());
	    
	    System.out.println("In controller values are:"+request.getParameter("pkroleid")+"rolename:"+request.getParameter("rolename")
	    +"moduleid:"+request.getParameter("moduleid"));
	    
	    roleService.servicesendmethod(masterrole);
	    
	    return "redirect:getmasterrole";
		/*model.setViewName("Roles");
		return model;*/
	}
	
	
	@RequestMapping(value = "/editRole", method = RequestMethod.POST)
	public ModelAndView editRole(MasterRole masterrole, HttpServletRequest request) {
		int roleId =  request.getParameter("roleId")==null?0:Integer.parseInt(request.getParameter("roleId"));
		SessionBean sessionBean = (SessionBean)request.getSession().getAttribute("sessionBean");
		int userId = sessionBean.getUserID();
		MasterRole roledata = roleService.getRoleInfoWithId(roleId,userId);
		request.setAttribute("role", roledata);
		
		ModelAndView modelMapValue = new ModelAndView("masterRole");
		modelMapValue.addObject("roleId", roledata.getPkroleid());
		modelMapValue.addObject("roleName", roledata.getRolename());
		modelMapValue.addObject("roleDescription", roledata.getRoledescription());
		modelMapValue.addObject("moduleID", roledata.getModuleid());
		return modelMapValue;
	}
	
	
	@RequestMapping(value = "/editRoleValues", method = RequestMethod.POST)
	public String updateRoleValues(MasterRole masterrole,HttpServletRequest request) {
		request.getParameter("roleID::"+request.getParameter("RoleId"));
		//System.out.println("ForumId value in updateForumValues method::" + forum.getForumId());
		//System.out.println("ForumId value in updateForumValues method::" + forum.getEditPermission());
		roleService.updateRole(masterrole);
		return "redirect:getmasterrole";
	}
	
	@RequestMapping(value = "/deleteRole", method = RequestMethod.POST)
	public String deleteRole(MasterRole masterrole, HttpServletRequest request) {
		int roleId =  request.getParameter("roleId")==null?0:Integer.parseInt(request.getParameter("roleId"));
		SessionBean sessionBean = (SessionBean)request.getSession().getAttribute("sessionBean");
		int userId = sessionBean.getUserID();
		
		roleService.deleteRole(roleId, userId);
		return "redirect:getmasterrole";
	}


	
	 /*  **********              for kmverification jsp pages                **************  */
	
	/*@RequestMapping(value = "/getkmverification", method = RequestMethod.GET)
	public ModelAndView getCreateKmVerificationPage(ModelAndView model, HttpServletRequest req) {

		model.setViewName("kmVerificationForm");
		return model;
	}*/
	
	

	
}
