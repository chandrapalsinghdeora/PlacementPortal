package com.precise.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.precise.model.ReplicateApplication;
import com.precise.model.SessionBean;
import com.precise.model.UpdateApplication;
import com.precise.service.ReplicateApplicationService;

@Controller
public class ReplicateApplicationController {
	@Autowired
	ReplicateApplicationService raservice;

	@RequestMapping(value="/replicateApplication")
	public ModelAndView replicateApplication(HttpServletRequest req,HttpServletResponse res)
	{
		int roleId;
		try
		{
		SessionBean sbean=(SessionBean)req.getSession().getAttribute("sessionBean");
		roleId=sbean.getRoleID();
		if(roleId!=6)
		{
			return new ModelAndView("LoginPage");
		}
		}catch(Exception e)
		{
			return new ModelAndView("LoginPage");
		}
		List<ReplicateApplication> details=raservice.getAllDetails();
		req.setAttribute("allCompanyDetails", details);
		return new ModelAndView("ReplicateApplication");
		
	}
	
	@RequestMapping(value="/replicateApp",method={ RequestMethod.POST})
	public String replicateApp(HttpServletRequest req,HttpServletResponse res,ReplicateApplication RA)
	{
	 int applycheck=RA.getApply();
	 int clcheck=RA.getCL();
	 int slcheck=RA.getSL();
	 int hlcheck=RA.getHL();
	 String destination = RA.getDestinationRoleId();
		String[] idArr = destination.split(",");
		
		List<ReplicateApplication> destinationList = new ArrayList<ReplicateApplication>();
		ReplicateApplication reapp = null;

		for (String id : idArr) {
			String[] appId = id.split("##");
			//System.out.println("shortlisted ids ::::" + id + " ::" + appId[0] + ":: " + appId[1]);
			reapp = new ReplicateApplication();
			reapp.setFirmId(Integer.parseInt(appId[1]));
			reapp.setSourceRoleId(Integer.parseInt(appId[0]));
			destinationList.add(reapp);
		}
      if(applycheck==1)
    	  raservice.applylist(destinationList,RA);
      if(clcheck==1)
    	  raservice.cllist(destinationList,RA);
      if(slcheck==1)
    	  raservice.sllist(destinationList,RA);
      if(hlcheck==1)
    	  raservice.hllist(destinationList,RA);
      return "redirect:replicateApplication";
	}
	
	@RequestMapping(value="/countsl",method={ RequestMethod.POST})
	public @ResponseBody int countsl(HttpServletRequest req,HttpServletResponse res,ReplicateApplication RA)
	{
		int applyid=RA.getFirmId();
		int x=raservice.countsl(applyid);
		System.out.println("csd:::"+x);
		return x;
		
	}
	@RequestMapping(value="/checkdata",method={ RequestMethod.POST})
	public @ResponseBody int checkdata(HttpServletRequest req,HttpServletResponse res,ReplicateApplication RA)
	{
		String x1="0";
		String x2="0";
		String x3="0";
		String roleid="";
		int apply=RA.getApply();
		int cl=RA.getCL();
		int sl=RA.getSL();
		int hl=RA.getHL();
		 String destination = RA.getDestinationRoleId();
			String[] idArr = destination.split(",");
			for (String id : idArr) {
				String[] appId = id.split("##");
				roleid+=Integer.parseInt(appId[0])+",";
			}
			roleid= roleid.substring(0, roleid.length()-1).trim();
			if(hl==1)
			{
				if(sl==1 && cl==1 && apply==1)
				{
					
				}
				else
				{
					x1=raservice.checkhldata(roleid,RA);
				}
			}
			if(sl==1)
			{
				if( cl==1 && apply==1)
				{
					
				}
				else
				{
					x2=raservice.checksldata(roleid);
				}
			}
			if(cl==1)
			{
				if( apply==1)
				{
					
				}
				else
				{
					x3=raservice.checkcldata(roleid);
				}
			}
	 
		if((x1.equals("0"))&&(x2.equals("0"))&&(x3.equals("0")))
		return 0;
		else 
		return 1;
		
	}
	
	@RequestMapping(value="/updateApplication")
	public ModelAndView updateApplication(HttpServletRequest req,HttpServletResponse res)
	{
		int roleId;
		try
		{
		SessionBean sbean=(SessionBean)req.getSession().getAttribute("sessionBean");
		roleId=sbean.getRoleID();
		if(roleId!=6)
		{
			return new ModelAndView("LoginPage");
		}
		}catch(Exception e)
		{
			return new ModelAndView("LoginPage");
		}
		List<UpdateApplication> allList=raservice.getAllList();
		req.setAttribute("getAllList", allList);
		return new ModelAndView("updateApplicationList");
	}
	
	@RequestMapping(value="/updatelistsend")
	public String updatelistsend(HttpServletRequest req,HttpServletResponse res,UpdateApplication UA)
	{
		System.out.println("csddddddd:::::::"+UA.getAllroleid());
		raservice.updatelistsend(UA);
		return "redirect:updateApplication";
		
	}
}
